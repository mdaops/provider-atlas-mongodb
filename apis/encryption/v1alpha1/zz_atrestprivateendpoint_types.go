// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AtRestPrivateEndpointInitParameters struct {

	// (String) Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	CloudProvider *string `json:"cloudProvider,omitempty" tf:"cloud_provider,omitempty"`

	// hexadecimal digit string that identifies your project.
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (String) Cloud provider region in which the Encryption At Rest private endpoint is located.
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`
}

type AtRestPrivateEndpointObservation struct {

	// (String) Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	CloudProvider *string `json:"cloudProvider,omitempty" tf:"cloud_provider,omitempty"`

	// (String) Error message for failures associated with the Encryption At Rest private endpoint.
	// Error message for failures associated with the Encryption At Rest private endpoint.
	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	// hexadecimal digit string that identifies the Private Endpoint Service.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Connection name of the Azure Private Endpoint.
	// Connection name of the Azure Private Endpoint.
	PrivateEndpointConnectionName *string `json:"privateEndpointConnectionName,omitempty" tf:"private_endpoint_connection_name,omitempty"`

	// hexadecimal digit string that identifies your project.
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (String) Cloud provider region in which the Encryption At Rest private endpoint is located.
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`

	// (String) State of the Encryption At Rest private endpoint.
	// State of the Encryption At Rest private endpoint.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type AtRestPrivateEndpointParameters struct {

	// (String) Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	// +kubebuilder:validation:Optional
	CloudProvider *string `json:"cloudProvider,omitempty" tf:"cloud_provider,omitempty"`

	// hexadecimal digit string that identifies your project.
	// Unique 24-hexadecimal digit string that identifies your project.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (String) Cloud provider region in which the Encryption At Rest private endpoint is located.
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	// +kubebuilder:validation:Optional
	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`
}

// AtRestPrivateEndpointSpec defines the desired state of AtRestPrivateEndpoint
type AtRestPrivateEndpointSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AtRestPrivateEndpointParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AtRestPrivateEndpointInitParameters `json:"initProvider,omitempty"`
}

// AtRestPrivateEndpointStatus defines the observed state of AtRestPrivateEndpoint.
type AtRestPrivateEndpointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AtRestPrivateEndpointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AtRestPrivateEndpoint is the Schema for the AtRestPrivateEndpoints API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,atlas-mongodb}
type AtRestPrivateEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.cloudProvider) || (has(self.initProvider) && has(self.initProvider.cloudProvider))",message="spec.forProvider.cloudProvider is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.projectId) || (has(self.initProvider) && has(self.initProvider.projectId))",message="spec.forProvider.projectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.regionName) || (has(self.initProvider) && has(self.initProvider.regionName))",message="spec.forProvider.regionName is a required parameter"
	Spec   AtRestPrivateEndpointSpec   `json:"spec"`
	Status AtRestPrivateEndpointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AtRestPrivateEndpointList contains a list of AtRestPrivateEndpoints
type AtRestPrivateEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AtRestPrivateEndpoint `json:"items"`
}

// Repository type metadata.
var (
	AtRestPrivateEndpoint_Kind             = "AtRestPrivateEndpoint"
	AtRestPrivateEndpoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AtRestPrivateEndpoint_Kind}.String()
	AtRestPrivateEndpoint_KindAPIVersion   = AtRestPrivateEndpoint_Kind + "." + CRDGroupVersion.String()
	AtRestPrivateEndpoint_GroupVersionKind = CRDGroupVersion.WithKind(AtRestPrivateEndpoint_Kind)
)

func init() {
	SchemeBuilder.Register(&AtRestPrivateEndpoint{}, &AtRestPrivateEndpointList{})
}
